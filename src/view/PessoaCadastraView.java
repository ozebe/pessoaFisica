/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

//import control.
import control.ConnectionFactory;
import control.Contato;
import control.Endereco;
import control.Escolaridade_Situacao;
import control.INI;
import control.PessoaFisica;
import control.Profissao;
import control.Usuario;
import control.ValidaCPF;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author wesley.santos
 */
public class PessoaCadastraView extends javax.swing.JFrame {

    private Usuario userLogado;
    private static Connection connection;
    private static ConnectionFactory fabrica = new ConnectionFactory();
    //pega o caminho da base no arquivo .ini
    public static INI db;
    public static INI user;
    public static INI password;

    private PessoaFisica pessoaF;
    private static Endereco endereco;
    private static Contato contato;
    private String cpf;

    public static boolean cadastraEndereco = false;
    public static boolean cadastraContato = false;
    //opcionais no cadastro
    private static Escolaridade_Situacao escolaridade_situacao;
    private static Profissao profissao;

    /**
     * Creates new form PessoaCadastraView
     *
     * @param chave
     * @param valor
     * @param usuario
     * @param senha
     */
    public PessoaCadastraView(String chave, String valor, String usuario, String senha) throws ClassNotFoundException, SQLException, IOException {
        db = new INI(chave, valor);
        user = new INI(chave, usuario);
        password = new INI(chave, senha);
        initComponents();
    }
//    public PessoaCadastraView() {
//
//        initComponents();
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings(value = "unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        cadastrarBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sexoField = new javax.swing.JComboBox<>();
        dataNascimentoField = new com.toedter.calendar.JDateChooser();
        CpfField = new javax.swing.JTextField();
        nomeCompletoField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cadEnderecoBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cadContatoBtn = new javax.swing.JButton();
        enderecoLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        contatoLabel = new javax.swing.JLabel();
        cadProfissaoBtn = new javax.swing.JButton();
        cadEscolaridadeBtn = new javax.swing.JButton();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Pessoa Fisica");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        cadastrarBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cadastrarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/save.png"))); // NOI18N
        cadastrarBtn.setText("Cadastrar");
        cadastrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nome completo:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("CPF:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data nascimento:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Sexo:");

        sexoField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Feminino", "Masculino" }));

        dataNascimentoField.setMaxSelectableDate(new java.util.Date(253370775705000L));
        dataNascimentoField.setMinSelectableDate(new java.util.Date(-2208973907000L));

        CpfField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CpfFieldFocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Endereço:");

        cadEnderecoBtn.setText("Cadastrar Endereço");
        cadEnderecoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadEnderecoBtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Contato:");

        cadContatoBtn.setText("Cadastrar Contato");
        cadContatoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadContatoBtnActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Profissão:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Escolaridade:");

        cadProfissaoBtn.setText("Cadastrar Profissão");

        cadEscolaridadeBtn.setText("Cadastrar Escolaridade");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nomeCompletoField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 174, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cadEscolaridadeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(cadProfissaoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cadastrarBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CpfField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dataNascimentoField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sexoField, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cadEnderecoBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cadContatoBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enderecoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(contatoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nomeCompletoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CpfField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sexoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enderecoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cadEnderecoBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cadContatoBtn)
                                    .addComponent(contatoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(dataNascimentoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cadProfissaoBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cadEscolaridadeBtn))
                .addGap(14, 14, 14)
                .addComponent(cadastrarBtn)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cadastrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarBtnActionPerformed

        try {

            if (nomeCompletoField.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Favor preencher o nome!\n", "Erro", JOptionPane.ERROR_MESSAGE);
            } else if (nomeCompletoField.getText().length() < 6) {
                JOptionPane.showMessageDialog(null, "O nome precisa ter no mínimo 6 caracteres!\n", "Erro", JOptionPane.ERROR_MESSAGE);
            } else if (CpfField.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Favor preencher o CPF!\n", "Erro", JOptionPane.ERROR_MESSAGE);
            } else if (dataNascimentoField.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Favor preencher a data de nascimento!\n", "Erro", JOptionPane.ERROR_MESSAGE);
            } else if (this.endereco.getCep().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Favor preencher os dados de endereço!\n", "Erro", JOptionPane.ERROR_MESSAGE);
            } else if (this.contato.getTelefone().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Favor preencher os dados de contato!\n", "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                cadastraPessoaFisica();
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Favor preencher todos os dados!\n", "Erro", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_cadastrarBtnActionPerformed

    private void cadEnderecoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadEnderecoBtnActionPerformed
        final EnderecoCadastraView end = new EnderecoCadastraView();
        end.setVisible(true);
        cadEnderecoBtn.setEnabled(false);
    }//GEN-LAST:event_cadEnderecoBtnActionPerformed

    private void cadContatoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadContatoBtnActionPerformed
        final ContatoCadastraView cont = new ContatoCadastraView();
        cont.setVisible(true);
        cadContatoBtn.setEnabled(false);
    }//GEN-LAST:event_cadContatoBtnActionPerformed

    private void CpfFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CpfFieldFocusLost
        String cpf = CpfField.getText().trim();
        cpf = cpf.replaceAll("[^0-9]+", "");
        if (ValidaCPF.isCPF(cpf)) {
            if (!cpfDuplicado(cpf)) {
                CpfField.setText(ValidaCPF.imprimeCPF(cpf));
                this.cpf = cpf;
            } else {

                JOptionPane.showMessageDialog(null, "CPF já cadastrado!\n", "Erro", JOptionPane.ERROR_MESSAGE);
                CpfField.setText("");
                CpfField.requestFocus();
            }

        } else {
            JOptionPane.showMessageDialog(null, "CPF inválido!\n", "Erro", JOptionPane.ERROR_MESSAGE);
            CpfField.requestFocus();
            CpfField.setText("");
        }
    }//GEN-LAST:event_CpfFieldFocusLost

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int output = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja sair?", "Sair", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (output == 0) {
            PessoaCadastraView.cadEnderecoBtn.setEnabled(true);
            this.dispose();
        } else if (output == 1) {

        }
    }//GEN-LAST:event_formWindowClosing

    private void cadastraEndereco() {
        if (PessoaCadastraView.cadastraEndereco == true) {
            try {
                //cria conexão e insere no banco
                connection = fabrica.getConnection(db.getDir(), user.getDir(), password.getDir());
                String sql = "insert into endereco(logradouro, numero, cep, complemento, bairro, localidade, uf, criado) values\n"
                        + "(?,?,?,?,?,?,?,?);";

                PreparedStatement pstmt = connection.prepareStatement(sql);

                pstmt.setString(1, PessoaCadastraView.endereco.getLogradouro());
                pstmt.setInt(2, PessoaCadastraView.endereco.getNumero());
                pstmt.setString(3, PessoaCadastraView.endereco.getCep());

                pstmt.setString(4, PessoaCadastraView.endereco.getComplemento());
                pstmt.setString(5, PessoaCadastraView.endereco.getBairro());
                pstmt.setString(6, PessoaCadastraView.endereco.getLocalidade());
                pstmt.setString(7, PessoaCadastraView.endereco.getUf());
                //criado
                java.sql.Timestamp timestamp = new java.sql.Timestamp(new java.util.Date().getTime());
                pstmt.setTimestamp(8, timestamp); //String.valueOf(formatador.format(timestamp))

                pstmt.executeUpdate();
                pstmt.close();
                connection.close();
                //------
            } catch (ClassNotFoundException | SQLException | IOException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar endereço!\n" + ex, "Erro", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(PessoaCadastraView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

        }

    }

    private void cadastraContato() {
        if (PessoaCadastraView.cadastraContato == true) {
            try {
                //insere na base
                connection = fabrica.getConnection(db.getDir(), user.getDir(), password.getDir());
                String sql = "insert into contato(ddd, telefone, email, criado) values\n"
                        + "(?,?,?,?)";

                PreparedStatement pstmt = connection.prepareStatement(sql);

                pstmt.setString(1, PessoaCadastraView.contato.getDdd());
                pstmt.setString(2, PessoaCadastraView.contato.getTelefone());

                if (PessoaCadastraView.contato.getEmail().equalsIgnoreCase("")) {
                    pstmt.setNull(3, Types.INTEGER);
                } else {
                    pstmt.setString(3, PessoaCadastraView.contato.getEmail());
                }

                java.sql.Timestamp timestamp = new java.sql.Timestamp(new java.util.Date().getTime());
                pstmt.setTimestamp(4, timestamp);
                pstmt.executeUpdate();
                pstmt.close();
                connection.close();
                //--------
            } catch (ClassNotFoundException | SQLException | IOException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar contato!\n" + ex, "Erro", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(PessoaCadastraView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

        }

    }

    private void cadastraPessoaFisica() {
        try {
            cadastraEndereco();
            cadastraContato();

            connection = fabrica.getConnection(db.getDir(), user.getDir(), password.getDir());
            String sql = "insert into pessoaFisica(nome, cpf, dataNascimento, sexo, contatoId, enderecoId, criado) values\n"
                    + "(?, ?, ?, ?, \n"
                    + "/*busca contato*/(select id from contato where (telefone = ? AND ddd = ?)), \n"
                    + "/*busca endereco*/(select id from endereco e where e.cep = ? and e.numero = ?), current_timestamp);";

            PreparedStatement pstmt = connection.prepareStatement(sql);

            //seta o nome
            pstmt.setString(1, nomeCompletoField.getText().toUpperCase());
            //seta o cpf
            pstmt.setString(2, this.cpf);
            //seta a data de nascimento
            java.sql.Date sDate = convertUtilToSql(dataNascimentoField.getDate());
            pstmt.setDate(3, sDate);
            //seta o sexo
            if (sexoField.getSelectedIndex() == 0) {
                pstmt.setString(4, "F");
            } else {
                pstmt.setString(4, "M");
            }
//telefone do contato para busca
            pstmt.setString(5, PessoaCadastraView.contato.getTelefone());
//ddd do contato para busca
            pstmt.setString(6, PessoaCadastraView.contato.getDdd());
//ou pega o email do contato para busca
            //pstmt.setString(7, PessoaCadastraView.contato.getEmail());
//cep para busca de endereco
            pstmt.setString(7, PessoaCadastraView.endereco.getCep());
//numero para busca de endereço
            pstmt.setInt(8, PessoaCadastraView.endereco.getNumero());

//                //criado
//                java.sql.Timestamp timestamp = new java.sql.Timestamp(new java.util.Date().getTime());
//                //formatador.format(timestamp)
//                pstmt.setTimestamp(6, timestamp); //String.valueOf(formatador.format(timestamp))
            pstmt.executeUpdate();
            pstmt.close();
            connection.close();
            JOptionPane.showMessageDialog(null, "Pessoa Física cadastrada com sucesso!\n", "Cadastro realizado", JOptionPane.INFORMATION_MESSAGE);
            PessoaCadastraView.cadEnderecoBtn.setEnabled(true);
            this.dispose();
        } catch (ClassNotFoundException | SQLException | IOException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao cadastrar pessoa fisica!\n" + ex, "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(PessoaCadastraView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean cpfDuplicado(String cpf) {
        try {
            connection = fabrica.getConnection(db.getDir(), user.getDir(), password.getDir());

            PreparedStatement stmt = connection.prepareStatement("select count(p.id) as cp\n"
                    + "from pessoaFisica p\n"
                    + "where p.cpf= ?");

            stmt.setString(1, cpf);

            ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                if (resultSet.getInt("cp") != 0) {
                    resultSet.close();
                    stmt.close();
                    connection.close();
                    return true;
                } else {
                    resultSet.close();
                    stmt.close();
                    connection.close();
                    return false;
                }
            }
        } catch (ClassNotFoundException | SQLException | IOException ex) {
            Logger.getLogger(ContatoCadastraView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro!\n" + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PessoaCadastraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PessoaCadastraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PessoaCadastraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PessoaCadastraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PessoaCadastraView().setVisible(true);
//            }
//        });
//    }
    public static Endereco getEndereco() {
        return endereco;
    }

    public static void setEndereco(Endereco endereco) {
        PessoaCadastraView.endereco = endereco;
    }

    public static Contato getContato() {
        return contato;
    }

    public static void setContato(Contato contato) {
        PessoaCadastraView.contato = contato;
    }

    private static java.sql.Date convertUtilToSql(java.util.Date uDate) {
        java.sql.Date sDate = new java.sql.Date(uDate.getTime());
        return sDate;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CpfField;
    public static javax.swing.JButton cadContatoBtn;
    public static javax.swing.JButton cadEnderecoBtn;
    private javax.swing.JButton cadEscolaridadeBtn;
    private javax.swing.JButton cadProfissaoBtn;
    private javax.swing.JButton cadastrarBtn;
    public static javax.swing.JLabel contatoLabel;
    private com.toedter.calendar.JDateChooser dataNascimentoField;
    public static javax.swing.JLabel enderecoLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField nomeCompletoField;
    private javax.swing.JComboBox<String> sexoField;
    // End of variables declaration//GEN-END:variables
}
